[GENERAL]
model_files:wrapper.v[wrapper],rst.ets
assume_if_true: True
abstract_clock: True
[DEFAULT]
bmc_length: 6
precondition: reset_done = 1_1

[variable_map_assert]
description:"variable_map_assert"
properties:(variable_map_assert__p74__ = 1_1) & (variable_map_assert__p76__ = 1_1) & (variable_map_assert__p78__ = 1_1)
assumptions:(noreset__m0__ = 1_1) & (variable_map_assume__m4__ = 1_1) & (variable_map_assume__m6__ = 1_1) & (variable_map_assume__m10__ = 1_1) & (variable_map_assume__m16__ = 1_1) & (variable_map_assume__m19__ = 1_1) & (variable_map_assume__m22__ = 1_1) & (variable_map_assume__m25__ = 1_1) & (variable_map_assume__m28__ = 1_1) & (variable_map_assume__m31__ = 1_1) & (variable_map_assume__m36__ = 1_1) & (variable_map_assume__m38__ = 1_1) & (variable_map_assume__m40__ = 1_1) & (variable_map_assume__m43__ = 1_1) & (variable_map_assume__m45__ = 1_1) & (variable_map_assume__m50__ = 1_1) & (variable_map_assume__m54__ = 1_1) & (variable_map_assume__m58__ = 1_1) & (variable_map_assume__m60__ = 1_1) & (variable_map_assume__m62__ = 1_1) & (variable_map_assume__m64__ = 1_1) & (invariant_assume__m79__ = 1_1) & (invariant_assume__m80__ = 1_1) & (additional_mapping_control_assume__m81__ = 1_1) & (additional_mapping_control_assume__m82__ = 1_1) & (additional_mapping_control_assume__m83__ = 1_1) & (additional_mapping_control_assume__m84__ = 1_1) & (additional_mapping_control_assume__m85__ = 1_1) & (additional_mapping_control_assume__m86__ = 1_1) & (additional_mapping_control_assume__m87__ = 1_1) & (additional_mapping_control_assume__m88__ = 1_1) & (additional_mapping_control_assume__m89__ = 1_1) & (additional_mapping_control_assume__m90__ = 1_1) & (additional_mapping_control_assume__m91__ = 1_1) & (issue_decode__m92__ = 1_1) & (issue_valid__m93__ = 1_1) & (post_value_holder__m94__ = 1_1) & (post_value_holder__m95__ = 1_1) & (post_value_holder__m96__ = 1_1) & (post_value_holder__m97__ = 1_1) & (post_value_holder__m98__ = 1_1) & (post_value_holder__m99__ = 1_1) & (post_value_holder__m100__ = 1_1) & (post_value_holder__m101__ = 1_1) & (post_value_holder__m102__ = 1_1) & (post_value_holder__m103__ = 1_1) & (post_value_holder__m104__ = 1_1) & (post_value_holder__m105__ = 1_1) & (post_value_holder__m106__ = 1_1) & (post_value_holder__m107__ = 1_1) & (post_value_holder__m108__ = 1_1) & (post_value_holder__m109__ = 1_1) & (post_value_holder__m110__ = 1_1) & (post_value_holder__m111__ = 1_1) & (post_value_holder__m112__ = 1_1) & (post_value_holder__m113__ = 1_1)
prove: True
verification: safety
strategy: ALL
expected: True
