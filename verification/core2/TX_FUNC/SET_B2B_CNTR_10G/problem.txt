[GENERAL]
model_files:wrapper.v[wrapper],rst.ets
assume_if_true: True
abstract_clock: True
[DEFAULT]
bmc_length: 6
precondition: reset_done = 1_1

[variable_map_assert]
description:"variable_map_assert"
properties:(variable_map_assert__p70__ = 1_1) & (variable_map_assert__p75__ = 1_1) & (variable_map_assert__p77__ = 1_1) & (variable_map_assert__p79__ = 1_1) & (variable_map_assert__p81__ = 1_1)
assumptions:(noreset__m0__ = 1_1) & (variable_map_assume__m2__ = 1_1) & (variable_map_assume__m4__ = 1_1) & (variable_map_assume__m6__ = 1_1) & (variable_map_assume__m8__ = 1_1) & (variable_map_assume__m13__ = 1_1) & (variable_map_assume__m18__ = 1_1) & (variable_map_assume__m21__ = 1_1) & (variable_map_assume__m24__ = 1_1) & (variable_map_assume__m29__ = 1_1) & (variable_map_assume__m31__ = 1_1) & (variable_map_assume__m36__ = 1_1) & (variable_map_assume__m38__ = 1_1) & (variable_map_assume__m40__ = 1_1) & (variable_map_assume__m42__ = 1_1) & (variable_map_assume__m45__ = 1_1) & (variable_map_assume__m47__ = 1_1) & (variable_map_assume__m52__ = 1_1) & (variable_map_assume__m56__ = 1_1) & (variable_map_assume__m60__ = 1_1) & (variable_map_assume__m62__ = 1_1) & (variable_map_assume__m64__ = 1_1) & (variable_map_assume__m66__ = 1_1) & (invariant_assume__m82__ = 1_1) & (invariant_assume__m83__ = 1_1) & (invariant_assume__m84__ = 1_1) & (invariant_assume__m85__ = 1_1) & (invariant_assume__m86__ = 1_1) & (invariant_assume__m87__ = 1_1) & (invariant_assume__m88__ = 1_1) & (invariant_assume__m89__ = 1_1) & (invariant_assume__m90__ = 1_1) & (invariant_assume__m91__ = 1_1) & (invariant_assume__m92__ = 1_1) & (invariant_assume__m93__ = 1_1) & (invariant_assume__m94__ = 1_1) & (invariant_assume__m95__ = 1_1) & (invariant_assume__m96__ = 1_1) & (invariant_assume__m97__ = 1_1) & (invariant_assume__m98__ = 1_1) & (invariant_assume__m99__ = 1_1) & (invariant_assume__m100__ = 1_1) & (invariant_assume__m101__ = 1_1) & (invariant_assume__m102__ = 1_1) & (invariant_assume__m103__ = 1_1) & (invariant_assume__m104__ = 1_1) & (additional_mapping_control_assume__m105__ = 1_1) & (additional_mapping_control_assume__m106__ = 1_1) & (additional_mapping_control_assume__m107__ = 1_1) & (additional_mapping_control_assume__m108__ = 1_1) & (additional_mapping_control_assume__m109__ = 1_1) & (additional_mapping_control_assume__m110__ = 1_1) & (additional_mapping_control_assume__m111__ = 1_1) & (additional_mapping_control_assume__m112__ = 1_1) & (additional_mapping_control_assume__m113__ = 1_1) & (additional_mapping_control_assume__m114__ = 1_1) & (additional_mapping_control_assume__m115__ = 1_1) & (additional_mapping_control_assume__m116__ = 1_1) & (issue_decode__m117__ = 1_1) & (issue_valid__m118__ = 1_1) & (post_value_holder__m119__ = 1_1) & (post_value_holder__m120__ = 1_1) & (post_value_holder__m121__ = 1_1) & (post_value_holder__m122__ = 1_1) & (post_value_holder__m123__ = 1_1) & (post_value_holder__m124__ = 1_1) & (post_value_holder__m125__ = 1_1) & (post_value_holder__m126__ = 1_1) & (post_value_holder__m127__ = 1_1) & (post_value_holder__m128__ = 1_1) & (post_value_holder__m129__ = 1_1) & (post_value_holder__m130__ = 1_1) & (post_value_holder__m131__ = 1_1) & (post_value_holder__m132__ = 1_1) & (post_value_holder__m133__ = 1_1) & (post_value_holder__m134__ = 1_1) & (post_value_holder__m135__ = 1_1) & (post_value_holder__m136__ = 1_1) & (post_value_holder__m137__ = 1_1) & (post_value_holder__m138__ = 1_1) & (post_value_holder__m139__ = 1_1) & (post_value_holder__m140__ = 1_1) & (post_value_holder__m141__ = 1_1) & (post_value_holder__m142__ = 1_1) & (post_value_holder__m143__ = 1_1)
prove: True
verification: safety
strategy: ALL
expected: True
